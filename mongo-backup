#!/bin/bash

#modified 8/28/21 to ensure survivability as well as live sync
#added tarball restore points as well as current/constant rsync validation

BACKUP_DIR=/backup/mongo
PASSWD=$(cat /backup/.secret)
USER=<DEFINE_ME>

cleanup_old () {
        #remove oldest snapshots from /backup/mongo-snapshots older than 30 days:
        find /backup/mongo-snapshots/ -name "*.tar.gz" -type f -mtime +30 -delete
        echo "removed older than 30 days snapshots from local dir"

        #remove oldest snapshots from nas [30 days]
        find /mnt/nas/mongodump/snapshots/ -name "*.tar.gz" -type f -mtime +30 -delete
        echo "removed snaps older than 30 days from nas"
}


#capture mongdump:
echo "starting mongodb backup"
mongodump --username $USER --password $PASSWD --out ${BACKUP_DIR}

#update the latest database readout via rsync capture to nas:
sleep 2
echo "moving local backup to nas"
rsync -r ${BACKUP_DIR} /mnt/nas/mongodump/dump/

#remove yesterday's snap in prep for new one:
echo "removing old snap from local"
rm /backup/latest-snapshot/mongo-snap-*.tar.gz

#create fresh tarball + date/time
echo "creating tarball for restore testing+recovery"
tar -czf /backup/latest-snapshot/mongo-snap-$(date +%y-%m-%d).tar.gz /backup/mongo

#copy latest snap to local backup dir:
cp /backup/latest-snapshot/mongo-snap-*.tar.gz /backup/mongo-snapshots/
echo "duplicating snapshots to archive: /backup/mongo-snapshots"

#send tarball to backup location for snapshot recovery:
echo "sending tar to nas"
rsync -av /backup/latest-snapshot/mongo-snap-*.tar.gz /mnt/nas/mongodump/snapshots/

#VALIDATE THAT SYSTEM BACKUP DID OCCUR AND ONLY THEN APPROVE DELETION OF OLDEST FILES:
if [[ -f /mnt/nas/mongodump/snapshots/mongo-snap-${date +%y-%m-%d}.tar.gz ]]
then
        cleanup_old
        echo "backups captured and confirmed stored on nas"
        exit 0
else
        echo "could not validate nas capture of backup, refusing to delete old versions"
        exit 0
fi
