#!/bin/bash
#this script will call the mongodb tarball from /mnt/nas/mongodump/snapshots/*.tar.gz and restore it here for testing
#it will then compare with the latest rsync value version on /mnt/nas/mongodump/dump/* which is rsynced from the same
#dump file on e1, and alert if there is a difference.
#Will perform a full restore


LATEST=$(date +%y-%m-%d)
LOG_LOCATION=/mongo-2/logs/restore-${LATEST}.log
$SECRET=$(cat /mongo-2/.secret)

restore_script () {
#CLEANUP FOR NEXT IMPORT:
rsync /mongo-2/latest-snapshot/*.tar.gz /mongo-2/restore-points/
rm /mongo-2/latest-snapshot/*.tar.gz
rm -r /mongo-2/latest-snapshot/backup/

#remove oldest restore point [7 days]
find /mongo-2/restore-points/ -name "*.tar.gz" -type f -mtime +7 -delete
echo "cleared oldest restore point +7 days"

#Call tarball from nas and expand:
cp /mnt/nas/mongodump/snapshots/mongo-snap-${LATEST}*.tar.gz /mongo-2/latest-snapshot/
echo "copied target snapshot to local"

#expand the snapshot:
tar -xvf /mongo-2/latest-snapshot/mongo-snap-${LATEST}*.tar.gz --directory=/mongo-2/latest-snapshot/
echo "expanded snapshot"

#restore mongoDB to local mongo database:
mongorestore -u <username> -p $SECRET --drop /mongo-2/latest-snapshot/backup/mongo
echo "completed restore"

echo "script completed"

}

restore_script | tee $LOG_LOCATION
echo $date >> $LOG_LOCATION
